{"version":3,"sources":["components/DragAndDrop.js","App.js","index.js"],"names":["DragAndDrop","data","useState","list","setList","text","setText","dragging","setDragging","dragItem","useRef","dragNode","handleDragEnter","e","params","currentItem","current","target","oldList","newList","JSON","parse","stringify","colI","items","splice","itemI","handleDragEnd","removeEventListener","getStyles","className","type","value","onChange","onClick","prev","todoData","rest","console","log","map","col","title","onDragEnter","length","item","draggable","onDragStart","addEventListener","setTimeout","handleDragStart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAgIeA,EA3HK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,EAAwBC,mBAASD,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,mBACXC,EAAWD,mBAWXE,EAAkB,SAACC,EAAGC,GAC1B,IAAMC,EAAcN,EAASO,QACzBH,EAAEI,SAAWN,EAASK,SACxBZ,GAAQ,SAACc,GACP,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAQxC,OAPAC,EAAQL,EAAOS,MAAMC,MAAMC,OACzBX,EAAOY,MACP,EACAP,EAAQJ,EAAYQ,MAAMC,MAAMC,OAAOV,EAAYW,MAAO,GAAG,IAE/DjB,EAASO,QAAUF,EAEZK,MAKPQ,EAAgB,SAAhBA,IACJnB,GAAY,GACZG,EAASK,QAAQY,oBAAoB,UAAWD,GAChDlB,EAASO,QAAU,KACnBL,EAASK,QAAU,MAGfa,EAAY,SAACf,GACjB,IAAMC,EAAcN,EAASO,QAC7B,OACED,EAAYQ,OAAST,EAAOS,MAC5BR,EAAYW,QAAUZ,EAAOY,MAEtB,eAEF,QAkBT,OACE,qCACE,sBAAKI,UAAU,YAAf,UACE,0CACA,sBAAKA,UAAU,WAAf,UACE,uBACEC,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACpB,GAAD,OAAOP,EAAQO,EAAEI,OAAOe,UAEpC,wBAAQF,UAAU,MAAMI,QAzBhB,WACT7B,IAILD,GAAQ,SAAC+B,GAAU,IAAD,EAChB,cAA4BA,GAArBC,EAAP,KAAoBC,EAApB,WAGA,OAFA,EAAAC,SAAQC,IAAR,SAAY,QAAZ,mBAAuBF,KACvBC,QAAQC,IAAI,WAAYH,GAClB,CAAN,2BAAaA,GAAb,IAAuBZ,MAAM,CAAEnB,GAAH,mBAAY+B,EAASZ,WAAjD,mBAA8Da,OAGhE/B,EAAQ,MAaF,4BAKJ,qBAAKwB,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACG3B,EAAKqC,KAAI,SAACC,EAAKlB,GACd,IAAQmB,EAAiBD,EAAjBC,MAAOlB,EAAUiB,EAAVjB,MACf,OACE,sBAEEM,UAAU,OACVa,YACEpC,IAAaiB,EAAMoB,OACf,SAAC/B,GAAD,OAAOD,EAAgBC,EAAG,CAAEU,OAAMG,MAAO,KACzC,KANR,UASE,6BAAKgB,IACJlB,EAAMgB,KAAI,SAACK,EAAMnB,GAChB,OACE,qBACEoB,WAAS,EACTC,YAAa,SAAClC,GAAD,OA7FT,SAACA,EAAGC,GAC1BL,EAASO,QAAUF,EACnBH,EAASK,QAAUH,EAAEI,OACrBN,EAASK,QAAQgC,iBAAiB,UAAWrB,GAC7CsB,YAAW,WACTzC,GAAY,KACX,GAuFmC0C,CAAgBrC,EAAG,CAAEU,OAAMG,WAC/CiB,YACEpC,EACI,SAACM,GAAD,OAAOD,EAAgBC,EAAG,CAAEU,OAAMG,WAClC,KAGNI,UAAWvB,EAAWsB,EAAU,CAAEN,OAAMG,UAAW,OATrD,SAWGmB,GAHInB,QAnBNH,cC1FftB,EAAO,CACX,CACEyC,MAAO,OACPlB,MAAO,IAET,CACEkB,MAAO,cACPlB,MAAO,IAET,CACEkB,MAAO,YACPlB,MAAO,KAcI2B,MAVf,WACE,OACE,mCACE,qBAAKrB,UAAU,YAAf,SACE,cAAC,EAAD,CAAa7B,KAAMA,SCjB3BmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.355761b6.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\r\nimport React from 'react';\r\n\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nconst DragAndDrop = ({ data }) => {\r\n  const [list, setList] = useState(data);\r\n  const [text, setText] = useState('');\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const dragItem = useRef();\r\n  const dragNode = useRef();\r\n\r\n  const handleDragStart = (e, params) => {\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    dragNode.current.addEventListener('dragend', handleDragEnd);\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    const currentItem = dragItem.current;\r\n    if (e.target !== dragNode.current) {\r\n      setList((oldList) => {\r\n        let newList = JSON.parse(JSON.stringify(oldList));\r\n        newList[params.colI].items.splice(\r\n          params.itemI,\r\n          0,\r\n          newList[currentItem.colI].items.splice(currentItem.itemI, 1)[0]\r\n        );\r\n        dragItem.current = params;\r\n\r\n        return newList;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  const getStyles = (params) => {\r\n    const currentItem = dragItem.current;\r\n    if (\r\n      currentItem.colI === params.colI &&\r\n      currentItem.itemI === params.itemI\r\n    ) {\r\n      return 'current item';\r\n    }\r\n    return 'item';\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    setList((prev) => {\r\n      const [todoData, ...rest] = prev;\r\n      console.log('rest', ...rest);\r\n      console.log('todoData', todoData);\r\n      return [{ ...todoData, items: [text, ...todoData.items] }, ...rest];\r\n    });\r\n\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-hero\">\r\n        <h1>TASK APP</h1>\r\n        <div className=\"add-item\">\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n          <button className=\"btn\" onClick={addItem}>\r\n            ADD TASK\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"column\">\r\n          {list.map((col, colI) => {\r\n            const { title, items } = col;\r\n            return (\r\n              <div\r\n                key={colI}\r\n                className=\"card\"\r\n                onDragEnter={\r\n                  dragging && !items.length\r\n                    ? (e) => handleDragEnter(e, { colI, itemI: 0 })\r\n                    : null\r\n                }\r\n              >\r\n                <h3>{title}</h3>\r\n                {items.map((item, itemI) => {\r\n                  return (\r\n                    <div\r\n                      draggable\r\n                      onDragStart={(e) => handleDragStart(e, { colI, itemI })}\r\n                      onDragEnter={\r\n                        dragging\r\n                          ? (e) => handleDragEnter(e, { colI, itemI })\r\n                          : null\r\n                      }\r\n                      key={itemI}\r\n                      className={dragging ? getStyles({ colI, itemI }) : 'item'}\r\n                    >\r\n                      {item}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDrop;\r\n","import './App.css';\nimport DragAndDrop from './components/DragAndDrop';\n\nconst data = [\n  {\n    title: 'Todo',\n    items: [],\n  },\n  {\n    title: 'In-Progress',\n    items: [],\n  },\n  {\n    title: 'Completed',\n    items: [],\n  },\n];\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <DragAndDrop data={data} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}